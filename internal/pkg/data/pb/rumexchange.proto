syntax = "proto3";
package quorum.pb;
option go_package = "github.com/rumsystem/quorum/internal/pkg/pb";
import "chain.proto";

message RumMsg {
 RumMsgType MsgType = 1;
 optional SessionIfConn IfConn = 2;
 optional SessionConnResp ConnResp = 3;
 optional Package DataPackage = 4;
 optional RelayReq RelayReq = 5;
 optional RelayResp RelayResp = 6;
}

enum RumMsgType {
    IF_CONN = 0;
    CONN_RESP = 1;
    CHAIN_DATA  = 2;
    RELAY_REQ  = 3;
    RELAY_RESP  = 4;
}

message SessionIfConn {
    bytes DestPeerID = 1;
    bytes SrcPeerID = 2;
    bytes SessionToken = 3;
    bytes Signature = 4; //sign by the srcPeer
    string ChannelId = 5;
	repeated PeerSig Peersroutes = 6; 
}

message SessionConnResp {
    bytes DestPeerID = 1;
    bytes SrcPeerID = 2;
    bytes SessionToken = 3;
    bytes Signature = 4; //sign by the destPeer
    string ChannelId = 5;
	repeated PeerSig Peersroutes = 6; 
}

message PeerSig {
    bytes PeerId = 1;
    bytes SessionSig = 2;
}

message GroupRelayItem {
    string        RelayId     = 1;
    string        GroupId     = 2;
    string        UserPubkey  = 3;
    int64         Duration    = 4;
    string        Type        = 5;
    string        SenderSign  = 6;
    string        Memo        = 7;
    int64         ApproveTime    = 8;
    string        ReqPeerId = 9;
    string        RelayPeerId = 10;
}

message RelayReq {
    string        GroupId     = 1;
    string        UserPubkey  = 2;
    int64         Duration    = 3;
    string        Type        = 4;
    string        SenderSign  = 5;
    string        Memo        = 6;
}

message RelayResp {
    string        RelayId     = 1;
    string        GroupId     = 2;
    string        UserPubkey  = 3;
    int64         Duration    = 4;
    string        Type        = 5;
    string        SenderSign  = 6;
    string        Memo        = 7;
    int64         ApproveTime = 8;
    bytes         RelayPeerId = 9;
}
